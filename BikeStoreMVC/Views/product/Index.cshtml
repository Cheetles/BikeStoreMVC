@*@model IEnumerable<BikeStoreMVC.Models.tbl_product> *@
@model PagedList.IPagedList<BikeStoreMVC.Models.tbl_product>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Products";
}

<h2>Products</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "product", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            Product Code
        </th>
        <th>
           Product Name
        </th>
        <th>
           Price
        </th>
        <th>
            Category
        </th>
        <th>
            Colour
        </th>
        <th>
            Description
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.tbl_model.model)*@
            @Html.ActionLink("Model", "Index", new { sortOrder = ViewBag.ModelSortParam, currentFilter=ViewBag.CurrentFilter})
        </th>
        <th>
           Size
        </th>
        <th>
            Sub Category
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.productCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.productName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tbl_category.category)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tbl_colour.colour)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tbl_description.description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tbl_model.model)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tbl_size.size)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tbl_sub_category.subcategory)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.proID }) |
            @Html.ActionLink("Details", "Details", new { id=item.proID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.proID })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))