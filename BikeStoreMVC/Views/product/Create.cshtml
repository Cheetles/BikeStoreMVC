@model BikeStoreMVC.Models.tbl_product

@{
    ViewBag.Title = "Create";
}

<h2>Add a new item</h2>
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#categoryID").change(function () {
            $("#subCategoryID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getSubCategory")',
                datatype: 'json',
                data: { id: $("#categoryID").val() },
                success: function (subcategories) {
                    $.each(subcategories, function (i, subcategory) {
                        $("#subCategoryID").append('<option value="' + subcategory.Value + '">' + subcategory.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to get sub categories' + ex);
                }
            });
            return false;
        })
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#subCategoryID").change(function () {
            $("#modelID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getModel")',
                datatype: 'json',
                data: { id: $("#subCategoryID").val() },
                success: function (models) {
                    $.each(models, function (i, model) {
                        $("#modelID").append('<option value="' + model.Value + '">' + model.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to get models' + ex);
                }
            });
            return false;
        })
    });
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tbl_product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.productCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoryID, "categoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("categoryID", null, htmlAttributes: new { @class = "form-control" }) *@    
                @Html.DropDownList("categoryID", ViewBag.category as List<SelectListItem>, new { style = "width: 200px;" })
                @Html.ValidationMessageFor(model => model.categoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.subCategoryID, "subCategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @*@Html.DropDownList("subCategoryID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("subCategoryID", new SelectList(string.Empty, "Value", "Text"), "[Select Sub Category]", new { style = "width: 200px" }) 
                @Html.ValidationMessageFor(model => model.subCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modelID, "modelID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("modelID", null, htmlAttributes: new { @class = "form-control" }) *@
                @Html.DropDownList("modelID", new SelectList(string.Empty, "Value", "Text"), "[Select Model]", new { style = "width: 200px" })
                @Html.ValidationMessageFor(model => model.modelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.colourID, "colourID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("colourID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.colourID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sizeID, "sizeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("sizeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sizeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, "description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
